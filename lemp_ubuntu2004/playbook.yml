#########################################
# MDITech Playbooks: LEMP on Ubuntu 20.04
#########################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Install Prerequisites
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Upgrade all apt packages
      apt: upgrade=dist force_apt_get=yes

    - name: Check if a reboot is needed
      register: reboot_required_file
      stat: path=/var/run/reboot-required get_md5=no

    - name: Reboot the server
      reboot:
        msg: "Reboot initiated by Ansible due to kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Install LEMP Packages
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'nginx', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql' ]
    
# Nginx Configuration
    - name: Set Nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"

    - name: Enable new site
      file:
        src: "/etc/nginx/sites-available/{{ http_conf }}"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        state: link
      notify: Reload Nginx
    
    - name: Remove "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx

#    - name: Start up the Nginx service  
#      shell: "service nginx start"

#    - name: Enable Nginx to run on startup 
#      service: name=nginx state=started enabled=true

# MySQL Configuration
    - name: Set the root password 
      mysql_user: 
        name: root 
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock

   - name: Remove all anonymous user accounts
     mysql_user:
       name: ''
       host_all: yes
       state: absent
       login_user: root
       login_password: "{{ mysql_root_password }}"

   - name: Remove the MySQL test database
     mysql_db: 
       name: test 
       state: absent
       login_user: root
       login_password: "{{ mysql_root_password }}"

    - name: Create a new project database
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        db: "{{ mysql_projectdatabase_name }}"
        state: present

    - name: Create a new project user
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        state: present
        name: "{{ mysql_projectuser_name }}"
        password: "{{ mysql_projectuser_password }}"
        priv:
          "{{ mysql_projectdatabase_name.* }}": "ALL,GRANT"

    - name: Create phpmyadmin user with password and all database privileges and 'WITH GRANT OPTION'
      mysql_user:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        name: "{{ mysql_phpmyadminuser_name }}"
        password: "{{ mysql_phpmyadminuser_password }}"
        priv: "*.*:ALL"
        state: present

    - name: Add data to database  
      copy: src=files/dump.sql dest=/tmp/dump.sql  

    - name: Insert data into database  
      mysql_db: name="{{ mysql_projectdatabase_name }}" state=import target=/tmp/dump.sql login_user="{{ mysql_projectuser_name }}" login_password="{{ mysql_projectuser_password }}"
    
#    - name: Start up the MySql service  
#      shell: "service mysql start"  

#    - name: Enable MySql to run on startup  
#      service: name=mysql state=started enabled=true

# PHPMyAdmin Configuration
    - name: debconf for pma
      debconf: name=phpmyadmin question='phpmyadmin/dbconfig-install' value='true' vtype='boolean'

    - name: debconf for pma
      debconf: name=phpmyadmin question='phpmyadmin/app-password-confirm' value='{{ mysql_phpmyadminuser_password }}' vtype='password'

    - name: debconf for pma
      debconf: name=phpmyadmin question='phpmyadmin/mysql/admin-pass' value='{{ mysql_phpmyadminuser_password }}' vtype='password'

    - name: debconf for pma
      debconf: name=phpmyadmin question='phpmyadmin/mysql/app-pass' value='{{ mysql_phpmyadminuser_password }}' vtype='password'

    - name: debconf for pma
      debconf: name=phpmyadmin question='phpmyadmin/reconfigure-webserver' value='' vtype='multiselect'

    - name: install pma
      apt: pkg=phpmyadmin state=present

    - name: configure site
      file: path=/var/www/html/phpmyadmin src=/usr/share/phpmyadmin state=link

# Sets Up PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/html/info.php"

# UFW Configuration
    - name: UFW Allow ports
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      with_items:
        - 22
        - 80
        - 443

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted